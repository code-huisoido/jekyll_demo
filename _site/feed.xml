<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="http://localhost:4000/myblog/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/myblog/" rel="alternate" type="text/html" /><updated>2019-09-18T17:17:33+08:00</updated><id>http://localhost:4000/myblog/feed.xml</id><title type="html">惜余</title><subtitle>攀上高峰，只为看到心中所想</subtitle><entry><title type="html">程序人生</title><link href="http://localhost:4000/myblog/%E7%A8%8B%E5%BA%8F%E4%BA%BA%E7%94%9F/" rel="alternate" type="text/html" title="程序人生" /><published>2019-09-18T00:00:00+08:00</published><updated>2019-09-18T00:00:00+08:00</updated><id>http://localhost:4000/myblog/%E7%A8%8B%E5%BA%8F%E4%BA%BA%E7%94%9F</id><content type="html" xml:base="http://localhost:4000/myblog/%E7%A8%8B%E5%BA%8F%E4%BA%BA%E7%94%9F/">&lt;blockquote&gt;
  &lt;p&gt;输入-处理-输出，这是程序的基本模型。到了这个年纪，发现人生也能如此安排，你控制不了一开始的输入，这个输入是出生环境、个人天赋因素综合起来的输入，年纪小的时候，这个处理也很难自控，基本是由父母长辈帮忙处理，所以顺利的话，到了高中毕业这个阶段，就输出了一个有一定学习能力、社会见识尚浅的人。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;blog_content&quot;&gt;
&lt;p&gt;人生来到这个阶段已经十八岁，由十八岁的自己作为输入，中间处理有两条主线，一条早早的出去社会打工，另一条是上大学。无论走哪条路，你开始可以控制往后的处理了，这里的处理决定了下一步的输出，而这个输出决定了下一个节点的输入。    &lt;/p&gt;
&lt;p&gt;你会发现，无论你走哪条路，都会习惯性往以前的印记去走，这就是思维定势带来的影响。当发现自己这差不多20年的经历，会深深地影响未来的路，你可能会叹息之前在浪费生命，导致现在的输入没有亮点，后面的处理也步步维艰。当然，也有另一种小概率会庆幸自己出生一个好家庭，父母给你一个好的起点，让你把这个输出带进未来30年的职业生涯，往后的处理很容易走进良性循环。&lt;/p&gt;
&lt;p&gt;说到这里，很多人会产生放弃努力的念头。因为你发现拼不过别人，发展处处受限，头脑思维非常简单，对抗风险的能力几乎为0。其实，人生这个游戏到这里才刚刚开始。想到这里，为了往后能得到更好的输出，不至于越处理越差，从大部分人生案例来看，主要是这几点有关键作用：1、进入一个大平台，事业单位或者大型公司，深耕领域，时机一到做到了管理岗位，不求发达，徐徐图进到达小康阶级，在家庭对后代就基本能够承上启下；2、进入一个创业公司，运气不错踩到发展风口，公司几次关键发展决策都没出现大错误，业务几何倍数增长，工资也跟着水涨船高，如果当了领导拿了股票，那也是一番意气风发；3、回家当个公务员或者老师，不求大富大贵，在外三两好友，对内妥善照顾家人，一生衣食无忧；4、这点就比较微妙，虽然是2019年但人与人之间还是存在巨大的信息差，有些人发现了这个门道，早早地收割一大堆门票，这点各有天命，按下不表；5、在这里谈的一开始是差的输入，所以就出现了一种早早醒悟，拼命学习，狠狠的改革自己的人，最后这类人大致是出一个独特体系的书籍、开知识课堂变现知识、运营微信公众号圈粉攒广告费、集结同类人一起收门票钱。&lt;/p&gt;
&lt;p&gt;以上一些案例，都在现实中随处可见。所以虽然没有好的输入，但是经过一连串默默无闻、苦逼带点运气的处理后，也能得到较好的输出。只是人生这个游戏，是在一个有着数不清关卡的大地图玩，这几个关卡你顺利通过了，不代表后面就稳了，但大概翻盘点还是在年轻的时候，毕竟时间就是最大的资本，可以趁年轻最大范围地去试错。但这些年的经历告诉我，还是要带着积累的意识去发展，门槛越高，人越少竞争就越少，这意味着有限的资源能最大限度的归个人拥有。&lt;/p&gt;
&lt;p&gt;千人千面，毕竟当前的经历限制了自己的所知所得，所以同行交流、获取社会最新资讯是非常必要的日常功课。但时刻要记得，时间才是最大的本钱，一分一秒，再也回不来。你用这个时间做什么，就决定了下一步有什么选择。&lt;/p&gt;
&lt;/div&gt;</content><author><name></name></author><category term="日记" /><category term="原创" /><summary type="html">输入-处理-输出，这是程序的基本模型。到了这个年纪，发现人生也能如此安排，你控制不了一开始的输入，这个输入是出生环境、个人天赋因素综合起来的输入，年纪小的时候，这个处理也很难自控，基本是由父母长辈帮忙处理，所以顺利的话，到了高中毕业这个阶段，就输出了一个有一定学习能力、社会见识尚浅的人。 人生来到这个阶段已经十八岁，由十八岁的自己作为输入，中间处理有两条主线，一条早早的出去社会打工，另一条是上大学。无论走哪条路，你开始可以控制往后的处理了，这里的处理决定了下一步的输出，而这个输出决定了下一个节点的输入。 你会发现，无论你走哪条路，都会习惯性往以前的印记去走，这就是思维定势带来的影响。当发现自己这差不多20年的经历，会深深地影响未来的路，你可能会叹息之前在浪费生命，导致现在的输入没有亮点，后面的处理也步步维艰。当然，也有另一种小概率会庆幸自己出生一个好家庭，父母给你一个好的起点，让你把这个输出带进未来30年的职业生涯，往后的处理很容易走进良性循环。 说到这里，很多人会产生放弃努力的念头。因为你发现拼不过别人，发展处处受限，头脑思维非常简单，对抗风险的能力几乎为0。其实，人生这个游戏到这里才刚刚开始。想到这里，为了往后能得到更好的输出，不至于越处理越差，从大部分人生案例来看，主要是这几点有关键作用：1、进入一个大平台，事业单位或者大型公司，深耕领域，时机一到做到了管理岗位，不求发达，徐徐图进到达小康阶级，在家庭对后代就基本能够承上启下；2、进入一个创业公司，运气不错踩到发展风口，公司几次关键发展决策都没出现大错误，业务几何倍数增长，工资也跟着水涨船高，如果当了领导拿了股票，那也是一番意气风发；3、回家当个公务员或者老师，不求大富大贵，在外三两好友，对内妥善照顾家人，一生衣食无忧；4、这点就比较微妙，虽然是2019年但人与人之间还是存在巨大的信息差，有些人发现了这个门道，早早地收割一大堆门票，这点各有天命，按下不表；5、在这里谈的一开始是差的输入，所以就出现了一种早早醒悟，拼命学习，狠狠的改革自己的人，最后这类人大致是出一个独特体系的书籍、开知识课堂变现知识、运营微信公众号圈粉攒广告费、集结同类人一起收门票钱。 以上一些案例，都在现实中随处可见。所以虽然没有好的输入，但是经过一连串默默无闻、苦逼带点运气的处理后，也能得到较好的输出。只是人生这个游戏，是在一个有着数不清关卡的大地图玩，这几个关卡你顺利通过了，不代表后面就稳了，但大概翻盘点还是在年轻的时候，毕竟时间就是最大的资本，可以趁年轻最大范围地去试错。但这些年的经历告诉我，还是要带着积累的意识去发展，门槛越高，人越少竞争就越少，这意味着有限的资源能最大限度的归个人拥有。 千人千面，毕竟当前的经历限制了自己的所知所得，所以同行交流、获取社会最新资讯是非常必要的日常功课。但时刻要记得，时间才是最大的本钱，一分一秒，再也回不来。你用这个时间做什么，就决定了下一步有什么选择。</summary></entry><entry><title type="html">前端体系</title><link href="http://localhost:4000/myblog/%E5%89%8D%E7%AB%AF%E4%BD%93%E7%B3%BB/" rel="alternate" type="text/html" title="前端体系" /><published>2019-09-18T00:00:00+08:00</published><updated>2019-09-18T00:00:00+08:00</updated><id>http://localhost:4000/myblog/%E5%89%8D%E7%AB%AF%E4%BD%93%E7%B3%BB</id><content type="html" xml:base="http://localhost:4000/myblog/%E5%89%8D%E7%AB%AF%E4%BD%93%E7%B3%BB/">&lt;div&gt;
&lt;p&gt;前端体系，持续更新...&lt;/p&gt;
&lt;image src=&quot;/myblog/images/前端体系.png&quot; /&gt;
&lt;/div&gt;</content><author><name></name></author><category term="前端" /><category term="原创" /><summary type="html">前端体系，持续更新...</summary></entry><entry><title type="html">Canvas</title><link href="http://localhost:4000/myblog/canvas/" rel="alternate" type="text/html" title="Canvas" /><published>2019-09-18T00:00:00+08:00</published><updated>2019-09-18T00:00:00+08:00</updated><id>http://localhost:4000/myblog/canvas</id><content type="html" xml:base="http://localhost:4000/myblog/canvas/">&lt;div&gt;
&lt;p&gt;Canvas体系，持续更新...&lt;/p&gt;
&lt;image src=&quot;/myblog/images/canvas.png&quot; /&gt;
&lt;/div&gt;</content><author><name></name></author><category term="前端" /><category term="原创" /><summary type="html">Canvas体系，持续更新...</summary></entry><entry><title type="html">算法</title><link href="http://localhost:4000/myblog/%E7%AE%97%E6%B3%95/" rel="alternate" type="text/html" title="算法" /><published>2019-09-18T00:00:00+08:00</published><updated>2019-09-18T00:00:00+08:00</updated><id>http://localhost:4000/myblog/%E7%AE%97%E6%B3%95</id><content type="html" xml:base="http://localhost:4000/myblog/%E7%AE%97%E6%B3%95/">&lt;h2 id=&quot;物理存储结构&quot;&gt;物理存储结构&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;数组
    &lt;ul&gt;
      &lt;li&gt;查找：时间复杂度O(1)插入：时间复杂度O(n)&lt;/li&gt;
      &lt;li&gt;扩容：把原来的数组长度 x 2&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;链表
    &lt;ul&gt;
      &lt;li&gt;查找：时间复杂度O(n)插入：时间复杂度O(1)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;h2 id=&quot;逻辑存储结构&quot;&gt;逻辑存储结构&lt;/h2&gt;
&lt;h3 id=&quot;线性结构&quot;&gt;线性结构&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;栈
    &lt;ul&gt;
      &lt;li&gt;后进先出&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;队列
    &lt;ul&gt;
      &lt;li&gt;先进先出&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;哈希表
    &lt;ul&gt;
      &lt;li&gt;哈希函数：对Key进行HashCode，得到一个数字下标&lt;/li&gt;
      &lt;li&gt;扩容：把原来的数组长度 x 2，重新哈希取模
        &lt;h3 id=&quot;非线性结构&quot;&gt;非线性结构&lt;/h3&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;二叉树
    &lt;ul&gt;
      &lt;li&gt;二叉排序树:时间复杂度O(logn)最坏情况O(n)&lt;/li&gt;
      &lt;li&gt;满二叉树&lt;/li&gt;
      &lt;li&gt;完全二叉树&lt;/li&gt;
      &lt;li&gt;树的自平衡
        &lt;ul&gt;
          &lt;li&gt;红黑树&lt;/li&gt;
          &lt;li&gt;AVL树&lt;/li&gt;
          &lt;li&gt;树堆&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;遍历
        &lt;ul&gt;
          &lt;li&gt;深度优先遍历
            &lt;ul&gt;
              &lt;li&gt;前序遍历
                &lt;ul&gt;
                  &lt;li&gt;每一个节点，递归实现根-&amp;gt;左节点-&amp;gt;右节点&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;中序遍历
                &lt;ul&gt;
                  &lt;li&gt;每一个节点，递归实现左节点-&amp;gt;根-&amp;gt;右节点&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;后序遍历
                &lt;ul&gt;
                  &lt;li&gt;每一个节点，递归实现左节点-&amp;gt;右节点-&amp;gt;根&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;广度优先遍历
            &lt;ul&gt;
              &lt;li&gt;层序遍历
                &lt;ul&gt;
                  &lt;li&gt;借助队列实现，把树的根节点入队列，如果队列不为空，继续以下过程：①输出当前队列的队首节点，查找该节点的左右节点，如果存在则入队列②重复第一步&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;二叉堆
    &lt;ul&gt;
      &lt;li&gt;最大堆、最小堆：插入元素进行比较上浮删除元素进行比较下沉&lt;/li&gt;
      &lt;li&gt;优先队列&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;h2 id=&quot;排序算法&quot;&gt;排序算法&lt;/h2&gt;
&lt;h3 id=&quot;时间复杂度on&quot;&gt;时间复杂度O(n²)&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;冒泡排序
    &lt;ul&gt;
      &lt;li&gt;算法过程：
        &lt;ul&gt;
          &lt;li&gt;大循环，从第一个元素i遍历到最后一个元素arr.length-1&lt;/li&gt;
          &lt;li&gt;小循环，从第一个元素j遍历到最后一个元素arr.length-i-1&lt;/li&gt;
          &lt;li&gt;大循环标记是否发生交换isSorted，isSorted为true则结束（优化点：确定是否提前结束循环）&lt;/li&gt;
          &lt;li&gt;小循环设置lastExchangeIndex，大循环确定有序边界sortBorder=lastExchangeIndex，j遍历到sortBorder（优化点：确定有序边界）&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;扩展
        &lt;ul&gt;
          &lt;li&gt;鸡尾酒排序：1、大循环控制从i到数组最后一个元素的遍历；2、小循环从左遍历到右，然后从右遍历到左&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;选择排序&lt;/li&gt;
  &lt;li&gt;插入排序&lt;/li&gt;
  &lt;li&gt;希尔排序&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;h3 id=&quot;时间复杂度onlogn&quot;&gt;时间复杂度O(nlogn)&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;快速排序
    &lt;ul&gt;
      &lt;li&gt;算法过程：（核心点分治法）
        &lt;ul&gt;
          &lt;li&gt;随机选择一个基准点pivot2、设定left、right指针，如果left != right，则有以下判断：①如果left &amp;lt;= pivot，left++;②如果right &amp;gt; pivot，right–；③都不符合，则把left和right的元素交换；如果left == right，则把left和pivot元素交换，返回left下标；&lt;/li&gt;
          &lt;li&gt;把得到的left下标设为基准点pivot，①startIndex，pivot-1的范围再继续做快速排序；②pivot+1、endIndex的范围再继续做快速排序；&lt;/li&gt;
          &lt;li&gt;如果startIndex &amp;gt;= endIndex，则结束排序。&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;归并排序&lt;/li&gt;
  &lt;li&gt;堆排序&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;h3 id=&quot;时间复杂度on-1&quot;&gt;时间复杂度O(n)&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;计数排序
    &lt;ul&gt;
      &lt;li&gt;算法过程：1、创建最大数-最小数的范围数组2、遍历数组，把对应下标的数字+13、最后把每个数组元素+前一个数组元素的和作为当前元素的值4、排序数组时，当前元素的值-1&lt;/li&gt;
      &lt;li&gt;缺点：1、数据分布不平衡时，会创建很多没有用的数组空间2、不是整数无法采用下标&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;桶排序
    &lt;ul&gt;
      &lt;li&gt;算法过程：1、求出最大数、最小数2、根据元素数量创建对应的桶3、遍历原始数组，分配到各个桶，依据算法（每个元素-最小数）* 桶的数量-1 / (最大数-最小数）4、对每个桶的元素进行排序5、遍历桶得到结果&lt;/li&gt;
      &lt;li&gt;缺点：1、数据分布不平衡时，一样会存在浪费空间&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;基数排序&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;h2 id=&quot;面试题&quot;&gt;面试题&lt;/h2&gt;
&lt;h3 id=&quot;如何判定一个链表是有环链表&quot;&gt;如何判定一个链表是有环链表？&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;扩展：1、如何求出环的长度？2、如何求出入环节点？&lt;/li&gt;
  &lt;li&gt;算法：
    &lt;ul&gt;
      &lt;li&gt;设定两个指针p1、p2，p1指向元素next，p2指向元素next.next&lt;/li&gt;
      &lt;li&gt;当p2指向元素不为null，p2.next指向元素不为null，则不停地检测p1，p2所指向元素是否相等，相等则有环&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;h3 id=&quot;实现一个栈该栈带有出栈入栈取最小元素3个方法要保证这3个方法的时间复杂度都是o1&quot;&gt;实现一个栈，该栈带有出栈、入栈、取最小元素3个方法，要保证这3个方法的时间复杂度都是O(1)？&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;算法：
    &lt;ul&gt;
      &lt;li&gt;栈A存储原始数组，栈B存储最小数&lt;/li&gt;
      &lt;li&gt;当出栈时，如果栈A和B的栈顶相同，则栈B出栈，当前栈顶仍然有最小元素&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;h3 id=&quot;求出两个整数的最大公约数&quot;&gt;求出两个整数的最大公约数？&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;算法：
    &lt;ul&gt;
      &lt;li&gt;碾转相除法&lt;/li&gt;
      &lt;li&gt;更相减损术&lt;/li&gt;
      &lt;li&gt;更相减损术+移位算术&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;h3 id=&quot;如何判断一个数是否为2的整数次幂&quot;&gt;如何判断一个数是否为2的整数次幂？&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;算法：
    &lt;ul&gt;
      &lt;li&gt;num&amp;amp;amp;num-1进行与运算，结果为0则符合&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;h3 id=&quot;无序数组排序后的最大相邻差&quot;&gt;无序数组排序后的最大相邻差？&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;算法：
    &lt;ul&gt;
      &lt;li&gt;借助桶排序的算法，每个桶统计最大数和最小数&lt;/li&gt;
      &lt;li&gt;比较相邻两个不为空的桶的A、B，B的最小值减去A的最大值，就是最大相邻差&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;h3 id=&quot;如何用栈实现队列&quot;&gt;如何用栈实现队列？&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;算法：
    &lt;ul&gt;
      &lt;li&gt;栈A实现入队2、栈A弹出栈的元素，作为栈B的入栈数据，栈B出栈实现出队&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;h3 id=&quot;找出一个正整数所有数字全排列的下一个数核心字典序算法&quot;&gt;找出一个正整数所有数字全排列的下一个数？（核心：字典序算法）&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;算法：
    &lt;ul&gt;
      &lt;li&gt;假设原始数组A，找出A中倒序的元素下标index&lt;/li&gt;
      &lt;li&gt;从A最后一个元素开始比较，比较index-1的元素X，如果X小于最后一个元素，则交换元素&lt;/li&gt;
      &lt;li&gt;从A最后一个元素开始比较，比较index的元素Y，如果Y大于最后一个元素，则交换元素输出结果，即为全排列的下一个数&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;h3 id=&quot;给出一个整数删去k个数字后的最小值核心贪心算法&quot;&gt;给出一个整数，删去k个数字后的最小值？（核心：贪心算法）&lt;/h3&gt;
&lt;h4 id=&quot;普通算法&quot;&gt;普通算法：&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;把整数用数组A存储&lt;/li&gt;
  &lt;li&gt;循环K次，每次把A从左到右比较大小，当左边元素大于右边元素时，则删掉左边的数字&lt;/li&gt;
  &lt;li&gt;打印数组得到结果&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;进阶算法&quot;&gt;进阶算法：&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;创建一个整数字符串A长度的栈B，得到A.length-K后的新长度L&lt;/li&gt;
  &lt;li&gt;遍历A的元素X在栈B入栈3、如果栈B栈顶的元素大于当前A遍历的元素X，则X覆盖栈顶的元素，相当于让B出栈4、找到栈中第一个非零数字的位置Offset，截取栈B从Offset到L的范围数字，得到结果&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;h3 id=&quot;如何实现大整数相加&quot;&gt;如何实现大整数相加？&lt;/h3&gt;
&lt;hr /&gt;

&lt;div&gt;
&lt;p&gt;基础算法，持续更新...&lt;/p&gt;

&lt;image src=&quot;/myblog/images/算法.png&quot; /&gt;
&lt;/div&gt;</content><author><name></name></author><category term="算法" /><category term="原创" /><summary type="html">物理存储结构 数组 查找：时间复杂度O(1)插入：时间复杂度O(n) 扩容：把原来的数组长度 x 2 链表 查找：时间复杂度O(n)插入：时间复杂度O(1) 逻辑存储结构 线性结构 栈 后进先出 队列 先进先出 哈希表 哈希函数：对Key进行HashCode，得到一个数字下标 扩容：把原来的数组长度 x 2，重新哈希取模 非线性结构 二叉树 二叉排序树:时间复杂度O(logn)最坏情况O(n) 满二叉树 完全二叉树 树的自平衡 红黑树 AVL树 树堆 遍历 深度优先遍历 前序遍历 每一个节点，递归实现根-&amp;gt;左节点-&amp;gt;右节点 中序遍历 每一个节点，递归实现左节点-&amp;gt;根-&amp;gt;右节点 后序遍历 每一个节点，递归实现左节点-&amp;gt;右节点-&amp;gt;根 广度优先遍历 层序遍历 借助队列实现，把树的根节点入队列，如果队列不为空，继续以下过程：①输出当前队列的队首节点，查找该节点的左右节点，如果存在则入队列②重复第一步 二叉堆 最大堆、最小堆：插入元素进行比较上浮删除元素进行比较下沉 优先队列 排序算法 时间复杂度O(n²) 冒泡排序 算法过程： 大循环，从第一个元素i遍历到最后一个元素arr.length-1 小循环，从第一个元素j遍历到最后一个元素arr.length-i-1 大循环标记是否发生交换isSorted，isSorted为true则结束（优化点：确定是否提前结束循环） 小循环设置lastExchangeIndex，大循环确定有序边界sortBorder=lastExchangeIndex，j遍历到sortBorder（优化点：确定有序边界） 扩展 鸡尾酒排序：1、大循环控制从i到数组最后一个元素的遍历；2、小循环从左遍历到右，然后从右遍历到左 选择排序 插入排序 希尔排序 时间复杂度O(nlogn) 快速排序 算法过程：（核心点分治法） 随机选择一个基准点pivot2、设定left、right指针，如果left != right，则有以下判断：①如果left &amp;lt;= pivot，left++;②如果right &amp;gt; pivot，right–；③都不符合，则把left和right的元素交换；如果left == right，则把left和pivot元素交换，返回left下标； 把得到的left下标设为基准点pivot，①startIndex，pivot-1的范围再继续做快速排序；②pivot+1、endIndex的范围再继续做快速排序； 如果startIndex &amp;gt;= endIndex，则结束排序。 归并排序 堆排序 时间复杂度O(n) 计数排序 算法过程：1、创建最大数-最小数的范围数组2、遍历数组，把对应下标的数字+13、最后把每个数组元素+前一个数组元素的和作为当前元素的值4、排序数组时，当前元素的值-1 缺点：1、数据分布不平衡时，会创建很多没有用的数组空间2、不是整数无法采用下标 桶排序 算法过程：1、求出最大数、最小数2、根据元素数量创建对应的桶3、遍历原始数组，分配到各个桶，依据算法（每个元素-最小数）* 桶的数量-1 / (最大数-最小数）4、对每个桶的元素进行排序5、遍历桶得到结果 缺点：1、数据分布不平衡时，一样会存在浪费空间 基数排序 面试题 如何判定一个链表是有环链表？ 扩展：1、如何求出环的长度？2、如何求出入环节点？ 算法： 设定两个指针p1、p2，p1指向元素next，p2指向元素next.next 当p2指向元素不为null，p2.next指向元素不为null，则不停地检测p1，p2所指向元素是否相等，相等则有环 实现一个栈，该栈带有出栈、入栈、取最小元素3个方法，要保证这3个方法的时间复杂度都是O(1)？ 算法： 栈A存储原始数组，栈B存储最小数 当出栈时，如果栈A和B的栈顶相同，则栈B出栈，当前栈顶仍然有最小元素 求出两个整数的最大公约数？ 算法： 碾转相除法 更相减损术 更相减损术+移位算术 如何判断一个数是否为2的整数次幂？ 算法： num&amp;amp;amp;num-1进行与运算，结果为0则符合 无序数组排序后的最大相邻差？ 算法： 借助桶排序的算法，每个桶统计最大数和最小数 比较相邻两个不为空的桶的A、B，B的最小值减去A的最大值，就是最大相邻差 如何用栈实现队列？ 算法： 栈A实现入队2、栈A弹出栈的元素，作为栈B的入栈数据，栈B出栈实现出队 找出一个正整数所有数字全排列的下一个数？（核心：字典序算法） 算法： 假设原始数组A，找出A中倒序的元素下标index 从A最后一个元素开始比较，比较index-1的元素X，如果X小于最后一个元素，则交换元素 从A最后一个元素开始比较，比较index的元素Y，如果Y大于最后一个元素，则交换元素输出结果，即为全排列的下一个数 给出一个整数，删去k个数字后的最小值？（核心：贪心算法） 普通算法： 把整数用数组A存储 循环K次，每次把A从左到右比较大小，当左边元素大于右边元素时，则删掉左边的数字 打印数组得到结果 进阶算法： 创建一个整数字符串A长度的栈B，得到A.length-K后的新长度L 遍历A的元素X在栈B入栈3、如果栈B栈顶的元素大于当前A遍历的元素X，则X覆盖栈顶的元素，相当于让B出栈4、找到栈中第一个非零数字的位置Offset，截取栈B从Offset到L的范围数字，得到结果 如何实现大整数相加？ 基础算法，持续更新...</summary></entry><entry><title type="html">新年</title><link href="http://localhost:4000/myblog/%E6%96%B0%E5%B9%B4/" rel="alternate" type="text/html" title="新年" /><published>2017-01-22T00:00:00+08:00</published><updated>2017-01-22T00:00:00+08:00</updated><id>http://localhost:4000/myblog/%E6%96%B0%E5%B9%B4</id><content type="html" xml:base="http://localhost:4000/myblog/%E6%96%B0%E5%B9%B4/">&lt;div class=&quot;blog_content&quot;&gt;
&lt;p&gt;2017年，坚持的一年。&lt;/p&gt;
&lt;p&gt;生活还在迷茫中，还是要继续寻找适合自己的位置。或许努力一辈子还不如别人一出生就拥有的财富值，但是能凭靠自己之力，结婚生子，照顾家庭，也不失为一种简单的幸福。&lt;/p&gt;
&lt;p&gt;新的一年，新的起点。&lt;/p&gt;
&lt;/div&gt;</content><author><name></name></author><category term="日记" /><category term="原创" /><summary type="html">2017年，坚持的一年。 生活还在迷茫中，还是要继续寻找适合自己的位置。或许努力一辈子还不如别人一出生就拥有的财富值，但是能凭靠自己之力，结婚生子，照顾家庭，也不失为一种简单的幸福。 新的一年，新的起点。</summary></entry><entry><title type="html">跑吧，追风少年</title><link href="http://localhost:4000/myblog/%E8%B7%91%E5%90%A7-%E8%BF%BD%E9%A3%8E%E5%B0%91%E5%B9%B4/" rel="alternate" type="text/html" title="跑吧，追风少年" /><published>2016-08-23T00:00:00+08:00</published><updated>2016-08-23T00:00:00+08:00</updated><id>http://localhost:4000/myblog/%E8%B7%91%E5%90%A7,%E8%BF%BD%E9%A3%8E%E5%B0%91%E5%B9%B4</id><content type="html" xml:base="http://localhost:4000/myblog/%E8%B7%91%E5%90%A7-%E8%BF%BD%E9%A3%8E%E5%B0%91%E5%B9%B4/">&lt;div class=&quot;blog_content&quot;&gt;
&lt;p&gt;篮球，圆圆的形状，摸上后就不禁地拍打起来，脚步也会自觉地迈出去，你看，球场上又多了一个随风而动的身影。&lt;/p&gt;
&lt;p&gt;刚出来工作时，还保持一周打一次篮球，那时候喜欢打篮球的同事也多，经常是周五下班就约在一起玩。后来部分同事因为公司战略布局而去其他地方办公了，所以一起打球的同事就更少了。但即使这样，我也会坚持约人打球，并且买了一个篮球，准备约不到人时还可以去投球，那球是斯伯丁牌子的，从小到大都没买过这么贵的篮球，所以我也更爱去投球了。&lt;/p&gt;
&lt;p&gt;时光一晃，毕业两年多了，工作上越来越忙，就算下班回来也要经常看手机留意业务是否报错，因此开始感觉生活有些疲劳，越是疲劳，就越提不起那个劲去打球。中间也发生了好多伤心累人的事，所以暂停了好长时间没玩球。&lt;/p&gt;
&lt;p&gt;其实，我也不是一个NBA迷，因为我也不会时常关注NBA赛事，特别是大学过后就偶尔看过一两次。但是篮球是一个贯穿我整个学生生涯最明显的标志，从初一体育课看别人打篮球，各种潇洒运球动作、后仰投篮、转身背打，对一个刚上初一的小孩子来说，是多么的酷。后来认识班上更多的同学后，我开始有伴一起打篮球了。就这样有了开始，有了一班也非常爱打篮球的朋友，因此初中回忆里打篮球的“嘣嘣”声响就没停过，直到高中、跨过高考、来到大学、步入社会，篮球就像一个活生生的兄弟，陪着我尝尽了人生的酸甜苦辣。&lt;/p&gt;
&lt;p&gt;学生的生涯，固然有很多时间去打篮球，但唯独碰上的是篮球，而不是足球、羽毛球等，所以这是命中注定的一个朋友，一个不会说话的朋友，但却用他自己的生存意义来告诉我。如果你用力拍打篮球，篮球也会积极地回应你，给它一个巧妙的力度和角度，它就能神奇的进去篮球框，“嗖”地一声从球网下来，完成了一个漂亮的投球，就这么简单，而我们乐此不疲的继续下去。&lt;/p&gt;
&lt;p&gt;篮球，边拍打着球边跑，又是另一种感受。如果跑不动，就没办法玩更多的篮球动作，最重要的是没办法和其他人一起玩篮球，连捡球都会成一个问题。所以篮球还是那个篮球，但你要保持运动，跟上篮球的节奏，向前跑，你会感受到篮球的乐趣。&lt;/p&gt;
&lt;p&gt;跑吧，追风少年，篮球在等你呢。&lt;/p&gt;
&lt;/div&gt;</content><author><name></name></author><category term="日记" /><category term="原创" /><summary type="html">篮球，圆圆的形状，摸上后就不禁地拍打起来，脚步也会自觉地迈出去，你看，球场上又多了一个随风而动的身影。 刚出来工作时，还保持一周打一次篮球，那时候喜欢打篮球的同事也多，经常是周五下班就约在一起玩。后来部分同事因为公司战略布局而去其他地方办公了，所以一起打球的同事就更少了。但即使这样，我也会坚持约人打球，并且买了一个篮球，准备约不到人时还可以去投球，那球是斯伯丁牌子的，从小到大都没买过这么贵的篮球，所以我也更爱去投球了。 时光一晃，毕业两年多了，工作上越来越忙，就算下班回来也要经常看手机留意业务是否报错，因此开始感觉生活有些疲劳，越是疲劳，就越提不起那个劲去打球。中间也发生了好多伤心累人的事，所以暂停了好长时间没玩球。 其实，我也不是一个NBA迷，因为我也不会时常关注NBA赛事，特别是大学过后就偶尔看过一两次。但是篮球是一个贯穿我整个学生生涯最明显的标志，从初一体育课看别人打篮球，各种潇洒运球动作、后仰投篮、转身背打，对一个刚上初一的小孩子来说，是多么的酷。后来认识班上更多的同学后，我开始有伴一起打篮球了。就这样有了开始，有了一班也非常爱打篮球的朋友，因此初中回忆里打篮球的“嘣嘣”声响就没停过，直到高中、跨过高考、来到大学、步入社会，篮球就像一个活生生的兄弟，陪着我尝尽了人生的酸甜苦辣。 学生的生涯，固然有很多时间去打篮球，但唯独碰上的是篮球，而不是足球、羽毛球等，所以这是命中注定的一个朋友，一个不会说话的朋友，但却用他自己的生存意义来告诉我。如果你用力拍打篮球，篮球也会积极地回应你，给它一个巧妙的力度和角度，它就能神奇的进去篮球框，“嗖”地一声从球网下来，完成了一个漂亮的投球，就这么简单，而我们乐此不疲的继续下去。 篮球，边拍打着球边跑，又是另一种感受。如果跑不动，就没办法玩更多的篮球动作，最重要的是没办法和其他人一起玩篮球，连捡球都会成一个问题。所以篮球还是那个篮球，但你要保持运动，跟上篮球的节奏，向前跑，你会感受到篮球的乐趣。 跑吧，追风少年，篮球在等你呢。</summary></entry><entry><title type="html">有一只燕子叫小燕子</title><link href="http://localhost:4000/myblog/%E6%9C%89%E4%B8%80%E5%8F%AA%E7%87%95%E5%AD%90%E5%8F%AB%E5%B0%8F%E7%87%95%E5%AD%90/" rel="alternate" type="text/html" title="有一只燕子叫小燕子" /><published>2016-08-04T00:00:00+08:00</published><updated>2016-08-04T00:00:00+08:00</updated><id>http://localhost:4000/myblog/%E6%9C%89%E4%B8%80%E5%8F%AA%E7%87%95%E5%AD%90%E5%8F%AB%E5%B0%8F%E7%87%95%E5%AD%90</id><content type="html" xml:base="http://localhost:4000/myblog/%E6%9C%89%E4%B8%80%E5%8F%AA%E7%87%95%E5%AD%90%E5%8F%AB%E5%B0%8F%E7%87%95%E5%AD%90/">&lt;div class=&quot;blog_content&quot;&gt;
&lt;p&gt;最近听上了一首《情深深雨蒙蒙》，脑海里却翻滚出当年追《还珠格格》的记忆。&lt;/p&gt;
&lt;p&gt;那时家家户户灯火通明，一到晚上差不多吃饱饭后，我就马不停蹄地闹着打开电视，那时只有一台电视，但也只有那时候，才能让一家人聚在一起，时而欢悦时而叹息，那是幸福的感觉。&lt;/p&gt;
&lt;p&gt;音乐播放到张卫健的《孤独不苦》，脑海里涌现出更多儿时回忆。是的，城市在进步，而我在追求什么。不管追求什么，时光不紧不慢的走着，我渐渐能听到那脚步声。这两年，我经常问自己，我能留下什么，我叹息的时光去哪里呢？&lt;/p&gt;
&lt;p&gt;其实，最美好的时光，在这里。以前接受幸福，现在我可以创造幸福，把这个鲜花递给身边的人，递给后来的人。&lt;/p&gt;
&lt;p&gt;一年四季，总有燕子飞过。&lt;/p&gt;
&lt;/div&gt;</content><author><name></name></author><category term="日记" /><category term="原创" /><summary type="html">最近听上了一首《情深深雨蒙蒙》，脑海里却翻滚出当年追《还珠格格》的记忆。 那时家家户户灯火通明，一到晚上差不多吃饱饭后，我就马不停蹄地闹着打开电视，那时只有一台电视，但也只有那时候，才能让一家人聚在一起，时而欢悦时而叹息，那是幸福的感觉。 音乐播放到张卫健的《孤独不苦》，脑海里涌现出更多儿时回忆。是的，城市在进步，而我在追求什么。不管追求什么，时光不紧不慢的走着，我渐渐能听到那脚步声。这两年，我经常问自己，我能留下什么，我叹息的时光去哪里呢？ 其实，最美好的时光，在这里。以前接受幸福，现在我可以创造幸福，把这个鲜花递给身边的人，递给后来的人。 一年四季，总有燕子飞过。</summary></entry><entry><title type="html">八月你好</title><link href="http://localhost:4000/myblog/%E5%85%AB%E6%9C%88%E4%BD%A0%E5%A5%BD/" rel="alternate" type="text/html" title="八月你好" /><published>2016-08-02T00:00:00+08:00</published><updated>2016-08-02T00:00:00+08:00</updated><id>http://localhost:4000/myblog/%E5%85%AB%E6%9C%88%E4%BD%A0%E5%A5%BD</id><content type="html" xml:base="http://localhost:4000/myblog/%E5%85%AB%E6%9C%88%E4%BD%A0%E5%A5%BD/">&lt;div class=&quot;blog_content&quot;&gt;
&lt;p&gt;八月份的到来，让我有一洗全身尘土的爽快感，因为7月份遇到的事情太不好了，好不容易找到新工作，又刚好碰到脚伤，但不管怎样，时间会带走不愉快的经历。&lt;/p&gt;
&lt;p&gt;突然心血来潮想学C++，于是下载vs2010，边看教学视频边写代码，心中涌起一股高中上课那种朴实无华的感受。&lt;/p&gt;
&lt;p&gt;不得不叹息，青春易逝，仿佛一切如昨日。长大了，除了吃喝玩乐，想要渐渐沉淀内心的想法，慢慢垫高自己的起点，直到某一天能碰到理想中的那朵云。&lt;/p&gt;
&lt;/div&gt;</content><author><name></name></author><category term="日记" /><category term="原创" /><summary type="html">八月份的到来，让我有一洗全身尘土的爽快感，因为7月份遇到的事情太不好了，好不容易找到新工作，又刚好碰到脚伤，但不管怎样，时间会带走不愉快的经历。 突然心血来潮想学C++，于是下载vs2010，边看教学视频边写代码，心中涌起一股高中上课那种朴实无华的感受。 不得不叹息，青春易逝，仿佛一切如昨日。长大了，除了吃喝玩乐，想要渐渐沉淀内心的想法，慢慢垫高自己的起点，直到某一天能碰到理想中的那朵云。</summary></entry><entry><title type="html">心情</title><link href="http://localhost:4000/myblog/%E5%BF%83%E6%83%85/" rel="alternate" type="text/html" title="心情" /><published>2016-07-27T00:00:00+08:00</published><updated>2016-07-27T00:00:00+08:00</updated><id>http://localhost:4000/myblog/%E5%BF%83%E6%83%85</id><content type="html" xml:base="http://localhost:4000/myblog/%E5%BF%83%E6%83%85/">&lt;div class=&quot;blog_content&quot;&gt;
&lt;p&gt;晴朗的日子里，早上的阳光斜照进我的客厅，晒得地上直冒光。现在是师生的暑假，是一年当中最释放最爽的两个月假期。无独有偶，我也沾上“暑假”的光。&lt;/p&gt;
&lt;p&gt;刚去一家新公司上班，却因为脚伤要请假一周，真是“问君能有几多愁，恰似一江春水向东流”啊。百无聊赖，只能在宿舍写点文字，打发下时间罢了。&lt;/p&gt;
&lt;p&gt;年龄越来越大，眼看就25岁了，经历的事情越来越让人惊呼，但也让自己越来越淡定，所谓时光磨人也是这个道理。如果有一天发现某人处事不惊，必定是心里早已看穿世事。&lt;/p&gt;
&lt;p&gt;世事皆庸人自扰，人活着就是为了生存，大部分人都觉得活得不够晒脱，因为人出生那刻就是代表人类的延续，是带着众人的希望降临的，所以人活着需要为身边的人负责，包括最亲的人以及将来陪伴身边的人，这当中有亲情、爱情、友情，这也是作为一个人最有意思的部分了。&lt;/p&gt;
&lt;/div&gt;</content><author><name></name></author><category term="日记" /><category term="原创" /><summary type="html">晴朗的日子里，早上的阳光斜照进我的客厅，晒得地上直冒光。现在是师生的暑假，是一年当中最释放最爽的两个月假期。无独有偶，我也沾上“暑假”的光。 刚去一家新公司上班，却因为脚伤要请假一周，真是“问君能有几多愁，恰似一江春水向东流”啊。百无聊赖，只能在宿舍写点文字，打发下时间罢了。 年龄越来越大，眼看就25岁了，经历的事情越来越让人惊呼，但也让自己越来越淡定，所谓时光磨人也是这个道理。如果有一天发现某人处事不惊，必定是心里早已看穿世事。 世事皆庸人自扰，人活着就是为了生存，大部分人都觉得活得不够晒脱，因为人出生那刻就是代表人类的延续，是带着众人的希望降临的，所以人活着需要为身边的人负责，包括最亲的人以及将来陪伴身边的人，这当中有亲情、爱情、友情，这也是作为一个人最有意思的部分了。</summary></entry></feed>